{"version":3,"sources":["Components/Home.js","Components/Login.js","Components/TwoWayBinding.js","Components/EventHandler.js","Components/ShowChildren.js","Components/ParentChild.js","Components/ListItems.js","Components/ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["Home","Login","colSpan","type","TwoWayBinding","props","state","data","updateData","bind","e","this","setState","target","value","onChange","Component","EventHandler","number","increaseByOne","decreaseByOne","className","readonly","onClick","ShowChildren","ParentChild","ListItems","listItems","items","map","item","key","id","text","setUpdate","deleteItem","icon","duration","easing","library","add","faTrash","ToDoList","currentItem","handleInput","addItem","Date","now","preventDefault","newItem","console","log","newItems","filterItems","filter","onSubmit","placeholder","React","App","to","faHome","color","faSignInAlt","faArrowsAltH","faTools","faList","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b84ab580.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Home Page</h1>\n      <h2>Welcome to my sample page</h2>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Login = () => {\n  return (\n    <div>\n      <table>\n        <tr>\n          <td colSpan=\"2\">Login</td>\n        </tr>\n        <tr>\n          <td>User Name</td>\n          <td>\n            <input type=\"text\" />\n          </td>\n        </tr>\n        <tr>\n          <td>Password</td>\n          <td>\n            <input type=\"text\" />\n          </td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <button>Submit</button>\n          </td>\n        </tr>\n      </table>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { Component } from \"react\";\n\nclass TwoWayBinding extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(e) {\n    this.setState({ data: e.target.value });\n  }\n  render() {\n    return (\n      <div>\n        <input type=\"text\" value={this.state.data} onChange={this.updateData} />\n        <h4>{this.state.data}</h4>\n      </div>\n    );\n  }\n}\n\nexport default TwoWayBinding;\n","import React, { Component } from \"react\";\n\nclass EventHandler extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0\n    };\n    this.increaseByOne = this.increaseByOne.bind(this);\n    this.decreaseByOne = this.decreaseByOne.bind(this);\n  }\n\n  increaseByOne() {\n    this.setState({ number: this.state.number + 1 });\n  }\n\n  decreaseByOne() {\n    if (this.state.number > 0) {\n      this.setState({ number: this.state.number - 1 });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <input\n            className=\"number\"\n            type=\"text\"\n            value={this.state.number}\n            readonly\n          ></input>\n        </div>\n        <button onClick={this.increaseByOne}>Increase</button>\n        <button onClick={this.decreaseByOne}>Decrease</button>\n      </div>\n    );\n  }\n}\n\nexport default EventHandler;\n","import React, { Component } from \"react\";\n\nconst ShowChildren = () => {\n  return <div>Children</div>;\n};\n\nexport default ShowChildren;\n","import React, { Component } from \"react\";\nimport ShowChildren from \"./ShowChildren\";\n\nclass ParentChild extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        Parent\n        <ShowChildren />\n      </div>\n    );\n  }\n}\n\nexport default ParentChild;\n","import React from \"react\";\nimport \"../ListItems.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FlipMove from \"react-flip-move\";\n\nfunction ListItems(props) {\n  const items = props.items;\n  const listItems = items.map(item => {\n    return (\n      <div className=\"list\" key={item.key}>\n        <p>\n          <input\n            type=\"text\"\n            id={item.key}\n            value={item.text}\n            onChange={e => {\n              props.setUpdate(e.target.value, item.key);\n            }}\n          />\n          <span>\n            <FontAwesomeIcon\n              className=\"faicons\"\n              onClick={() => {\n                props.deleteItem(item.key);\n              }}\n              icon=\"trash\"\n            />\n          </span>\n        </p>\n      </div>\n    );\n  });\n  return (\n    <div>\n      <FlipMove duration={300} easing=\"ease-in-out\">\n        {listItems}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default ListItems;\n","import React from \"react\";\nimport \"../App.scss\";\nimport \"../ToDoForm.scss\";\nimport ListItems from \"./ListItems\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTrash);\n\nclass ToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n        key: \"\"\n      }\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    });\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if (newItem.text != \"\") {\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: \"\",\n          key: \"\"\n        }\n      });\n    }\n  }\n\n  deleteItem(key) {\n    const filterItems = this.state.items.filter(item => item.key !== key);\n    this.setState({ items: filterItems });\n  }\n\n  setUpdate(text, key) {\n    console.log(\"items:\" + this.state.items);\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        console.log(item.key + \"    \" + key);\n        item.text = text;\n      }\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Text\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <ListItems\n          items={this.state.items}\n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}\n        ></ListItems>\n      </div>\n    );\n  }\n}\n\nexport default ToDoList;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Login from \"./Components/Login\";\nimport TwoWayBinding from \"./Components/TwoWayBinding\";\nimport EventHandler from \"./Components/EventHandler\";\nimport ParentChild from \"./Components/ParentChild\";\nimport ToDoList from \"./Components/ToDoList\";\nimport \"./App.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faEdit,\n  faList,\n  faTrash,\n  faWarehouse,\n  faSignInAlt,\n  faArrowsAltH,\n  faTools\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <ul>\n              <li>\n                <Link to={\"/\"}>\n                  <FontAwesomeIcon icon={faHome} color=\"white\" /> Home\n                </Link>\n              </li>\n              <li>\n                <Link to={\"/login\"}>\n                  <FontAwesomeIcon icon={faSignInAlt} color=\"white\" />\n                  Login\n                </Link>\n              </li>\n              <li>\n                <Link to={\"/two-way-binding\"}>\n                  <FontAwesomeIcon icon={faArrowsAltH} color=\"white\" /> Two Way\n                  Binding\n                </Link>\n              </li>\n              <li>\n                <Link to={\"/event-handler\"}>\n                  <FontAwesomeIcon icon={faTools} color=\"white\" /> Event Handler\n                </Link>\n              </li>\n              <li>\n                <Link to={\"/parent-child\"}>\n                  <FontAwesomeIcon icon={faArrowsAltH} color=\"white\" />\n                  Passing Between Parent/Child\n                </Link>\n              </li>\n              <li>\n                <Link to={\"/to-do-list\"}>\n                  <FontAwesomeIcon icon={faList} color=\"white\" />\n                  To-Do List\n                </Link>\n              </li>\n            </ul>\n          </header>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/two-way-binding\" component={TwoWayBinding} />\n            <Route exact path=\"/event-handler\" component={EventHandler} />\n            <Route exact path=\"/parent-child\" component={ParentChild} />\n            <Route exact path=\"/to-do-list\" component={ToDoList} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//import \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}